DROP TABLE IF EXISTS ROLES;
CREATE TABLE ROLES
(
    ID   BIGINT PRIMARY KEY,
    NAME VARCHAR(255)
);

CREATE SEQUENCE USERS_SQ START WITH 4;

DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS
(
    ID       BIGINT DEFAULT USERS_SQ.nextval PRIMARY KEY,
    USERNAME     VARCHAR(255),
    PASSWORD     VARCHAR(255)
);

DROP TABLE IF EXISTS USER_ROLES;
CREATE TABLE USER_ROLES
(
    USER_ID   BIGINT,
    ROLE_ID BIGINT,
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ID),
    UNIQUE KEY USER_ROLES_U1 (USER_ID, ROLE_ID)
);

DROP TABLE IF EXISTS AUTHORS;
CREATE TABLE AUTHORS
(
    ID        BIGINT PRIMARY KEY,
    FULL_NAME VARCHAR(255)
);

DROP TABLE IF EXISTS GENRES;
CREATE TABLE GENRES
(
    ID   BIGINT PRIMARY KEY,
    NAME VARCHAR(255)
);

CREATE SEQUENCE BOOKS_SQ START WITH 4;

DROP TABLE IF EXISTS BOOKS;
CREATE TABLE BOOKS
(
    ID       BIGINT DEFAULT BOOKS_SQ.nextval PRIMARY KEY,
    NAME     VARCHAR(255),
    GENRE_ID BIGINT,
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES (ID)
);

DROP TABLE IF EXISTS BOOK_AUTHORS;
CREATE TABLE BOOK_AUTHORS
(
    BOOK_ID   BIGINT,
    AUTHOR_ID BIGINT,
    FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE,
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS (ID),
    UNIQUE KEY BOOK_AUTHORS_U1 (BOOK_ID, AUTHOR_ID)
);

CREATE SEQUENCE BOOK_COMMENTS_SQ START WITH 2;

DROP TABLE IF EXISTS BOOK_COMMENTS;
CREATE TABLE BOOK_COMMENTS
(
    ID         BIGINT DEFAULT BOOK_COMMENTS_SQ.nextval PRIMARY KEY,
    TEXT       VARCHAR(255),
    CREATED_ON TIMESTAMP WITH TIME ZONE,
    BOOK_ID    BIGINT,
    FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE
);

-- ACL tables begin
CREATE TABLE IF NOT EXISTS acl_sid (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  principal tinyint(1) NOT NULL,
  sid varchar(100) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_1 (sid,principal)
);

CREATE TABLE IF NOT EXISTS acl_class (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  class varchar(255) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_2 (class)
);

CREATE TABLE IF NOT EXISTS acl_entry (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  acl_object_identity bigint(20) NOT NULL,
  ace_order int(11) NOT NULL,
  sid bigint(20) NOT NULL,
  mask int(11) NOT NULL,
  granting tinyint(1) NOT NULL,
  audit_success tinyint(1) NOT NULL,
  audit_failure tinyint(1) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_4 (acl_object_identity,ace_order)
);

CREATE TABLE IF NOT EXISTS acl_object_identity (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  object_id_class bigint(20) NOT NULL,
  object_id_identity bigint(20) NOT NULL,
  parent_object bigint(20) DEFAULT NULL,
  owner_sid bigint(20) DEFAULT NULL,
  entries_inheriting tinyint(1) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_3 (object_id_class,object_id_identity)
);

ALTER TABLE acl_entry
ADD FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity(id);

ALTER TABLE acl_entry
ADD FOREIGN KEY (sid) REFERENCES acl_sid(id);

--
-- Constraints for table acl_object_identity
--
ALTER TABLE acl_object_identity
ADD FOREIGN KEY (parent_object) REFERENCES acl_object_identity (id);

ALTER TABLE acl_object_identity
ADD FOREIGN KEY (object_id_class) REFERENCES acl_class (id);

ALTER TABLE acl_object_identity
ADD FOREIGN KEY (owner_sid) REFERENCES acl_sid (id);
-- ACL tables end